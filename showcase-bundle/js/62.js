/*! For license information please see 62.js.LICENSE.txt */
(self.webpackChunkmp_webgl=self.webpackChunkmp_webgl||[]).push([[62],{98062:(i,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>d});var e=s(57956),a=s(22819),n=s(97542),o=s(73339),l=s(54244),c=s(10374);class d extends n.Y{constructor(){super(...arguments),this.name="plugin",this.data=new o.e}async init(i,t){if([this.ses,this.sdk,this.pluginConfigDataModule]=await Promise.all([t.getModuleBySymbol(e.y.SES),t.getModuleBySymbol(e.y.SDK),t.getModuleBySymbol(e.y.PLUGIN_CONFIG_DATA_MODULE)]),i.pluginPolicies.enabled){const i=t.subscribe(c.LZ,(async({phase:s,application:e})=>{s===l.nh.PLAYING&&(this.log.devInfo("Reached PLAYING stage, checking whether configured plugins need to load to start: ",e),e===l.Mx.SHOWCASE&&await this.loadConfigured(),this.bindings.push(t.subscribe(c.pB,(async i=>{this.log.devInfo("Switch in active application detected by plugin system: ",i.application),i.application===l.Mx.WORKSHOP?this.disposeAll():i.application===l.Mx.SHOWCASE&&await this.loadConfigured()}))),i.cancel())}))}t.market.register(this,o.e,this.data)}async loadConfigured(){if(this.pluginConfigDataModule.registryLoaded){const i=await this.pluginConfigDataModule.getConfiguredPlugins();if(this.log.debug("Combined configuration with registry data, loading plugins: "+JSON.stringify(i,void 0,2)),this.pluginConfigDataModule.pluginConfigData.disabled)return void this.log.debug("Cannot load plugins! Disabled by URL parameter.");const t=[];for(const s of i)t.push(this.load(s));await Promise.all(t)}}async fetchPlugin(i,t,s,e){e&&this.ses.freezeForStrict();const a=await this.ses.makeSecureEnvironment(i+""+(s?"-"+s:""),t,e);if(a){return[a,a.compartment.globalThis.plugin]}return null}unload(i){const t=i.id&&""!==i.id?i.id:"default",s={applicationKey:i.applicationKey,id:t},e=this.data.get(s);if(e){try{e.dispose()}catch(i){this.log.warn("An error occurred when disposing a plugin, it may be in a partially disposed state",i)}this.data.delete(s)}}async load(i){const{applicationKey:t,src:s,id:e,strict:a}=i,n=void 0===a||a,o=e||"default",l={applicationKey:t,id:o};if(this.data.get(l))return Promise.reject(`Plugin for ${t}-${o} already loaded.`);const[c,d]=await this.fetchPlugin(t,s,o,n)||[];c&&d&&await this.initPlugin(c,d.factory,i)}async initPlugin(i,t,s){const e=t(),{applicationKey:n,id:o,config:l}=s;let c=()=>{};const d=e.onInit||e.init;if(d){class i{constructor(i){this.sdk=i}connect(){return this.sdk.connectPlugin(n)}cancelConnecting(){}}class t{getFactory(i){return i.messengerFactory}}const s=await a.tK.connect(new i(this.sdk),new t,window);d.call(e,s,l),c=()=>s.disconnect()}const r={applicationKey:n,id:o};this.data.set(r,e,(()=>{const t=e.onDestroy||e.dispose;null==t||t.call(e),c(),i.dispose()}))}dispose(i){super.dispose(i),this.disposeAll()}disposeAll(){for(const[i,t]of this.data.plugins.entries())t.dispose();this.data.plugins.clear()}}}}]);